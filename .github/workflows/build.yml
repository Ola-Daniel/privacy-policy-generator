name: Build

on: 
  push:
    branches:
      - main # update this with the name of main branch
    tags:
      - '*'

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build .

    - name: Run go vet
      run: go vet .

    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Run staticcheck
      run: staticcheck .


    #- name: Run tests
    #  run: go test -race -vet=off ./...

  push:

    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ needs.build.result == 'success' }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Grant execute permission to versioning script
        run: chmod +x tag.sh
      
      - name: Generate Semantic Version
        id: version
        run: |
          echo "::set-output name=version::$(./tag.sh)"  

      - name: Debug Semantic Version output
        run: echo {{ steps.version.outputs.version }}


      - name: Tag and push new version
        if: steps.version.outputs.version != '1.0.0'      # Skip tagging for initial version
        run: |
          git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
          git push origin ${{ steps.version.outputs.version }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: |
            doolaa/policygenerator:${{ steps.version.outputs.version }}
            doolaa/policygenerator:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'doolaa/policygenerator:${{ steps.version.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      
      - name: Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            doolaa/policygenerator:${{ steps.version.outputs.version }}
            doolaa/policygenerator:latest
          
